'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var nSQL=require('nano-sql').nSQL;var Model=function(){function Model(attributes){_classCallCheck(this,Model);Object.defineProperty(this,'_attributes',{value:attributes});Object.defineProperty(this,'_table',{writable:false});Object.defineProperty(this,'_keyAttribute',{value:'id',writable:true})}_createClass(Model,[{key:'belongsToMany',value:function belongsToMany(TargetClass,PivotClass,localKey,foreignKey){var _this=this;return{TargetClass:TargetClass,PivotClass:PivotClass,save:function save(data,pivotData){return new Promise(function(resolve,reject){console.debug('Model::belongsToMany::save');var targetModel=new TargetClass(data);targetModel.save().then(function(){console.debug('Model::belongsToMany::save - Saved targetModel:',targetModel);var pivotModel=new PivotClass(pivotData);pivotModel.attributes[pivotModel.keyAttribute[0]]=targetModel.key;pivotModel.attributes[pivotModel.keyAttribute[1]]=_this.key;console.log('PivotModel',pivotModel,pivotModel.keyAttribute,pivotModel.key);pivotModel.save().then(function(){console.debug('Model::belongsToMany::save - Saved pivotModel:',pivotModel);resolve(targetModel,pivotModel)}).catch(function(error){console.error('Model::belongsToMany::save::pivotModel.save()',error);throw new Error('Model::belongsToMany::save::pivotModel.save() - Error while saving pivotModel. '+error.error)})}).catch(function(error){console.error('Model::belongsToMany::save::targetModel.save()',error);throw new Error('Model::belongsToMany::save() - Error while saving targetModel'+error.error)})})},create:function create(data,pivotData){return new Promise(function(resolve,reject){TargetClass.create(data).then(function(model){console.debug('Model::belongsToMany::create. Created target model',model);PivotClass.create(pivotData).then(function(pivotModel){console.debug('Model::belongsToMany::create. Created pivot model',pivotModel);resolve(model)}).error(reject)}).catch(function(error){console.error('Model::belongsToMany::create',error);reject(error)})})},find:function find(key){return new Promise(function(resolve,reject){console.debug('Model::belongsToMany::find. Key:',key);throw new Error('Not implemented')})},get:function get(){return new Promise(function(resolve,reject){PivotClass.where(foreignKey,_this.attributes[localKey]).then(function(models){resolve(models)}).catch(resolve)})}}}},{key:'getAttribute',value:function getAttribute(attr,def){if(this._attributes[attr]){return this._attributes[attr]}return def}},{key:'keyAttribute',get:function get(){return this._keyAttribute?this._keyAttribute:'id'}},{key:'table',get:function get(){return this._table?this._table:this.constructor.name.toLowerCase()}},{key:'attributes',get:function get(){return this._attributes}}],[{key:'create',value:function(){var _ref=_asyncToGenerator(regeneratorRuntime.mark(function _callee(attributes){var _this2=this;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt('return',new Promise(function(res,rej){nSQL(_this2.table).query('upsert',attributes).exec().then(function(result,db){var model=new _this2(result[1][0]);res(model)})}));case 1:case'end':return _context.stop();}}},_callee,this)}));function create(_x){return _ref.apply(this,arguments)}return create}()},{key:'all',value:function all(){return nSQL(this.table).query('select')}},{key:'find',value:function find(key){var _this3=this;return new Promise(function(res,rej){nSQL(_this3.table).query('select').where([_this3.keyAttribute,'=',key]).exec().then(function(result,db){var model=new _this3(result[0]);res(model)})})}},{key:'schema',get:function get(){throw new Error('Schema not declared')}},{key:'keyAttribute',get:function get(){return this._keyAttribute?this._keyAttribute:'id'}},{key:'table',get:function get(){return new this().table}}]);return Model}();module.exports=Model;